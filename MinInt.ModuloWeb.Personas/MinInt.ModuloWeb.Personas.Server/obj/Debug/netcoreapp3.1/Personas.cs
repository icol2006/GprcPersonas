// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/personas.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Personas {

  /// <summary>Holder for reflection information generated from Protos/personas.proto</summary>
  public static partial class PersonasReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/personas.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PersonasReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVQcm90b3MvcGVyc29uYXMucHJvdG8SB3BlcnNvbmEiHwoOR2V0QnlJZFJl",
            "cXVlc3QSDQoFaWRQZXIYASABKAUiswEKDEdldEJ5SWRSZXBseRINCgVpZFBl",
            "chgBIAEoBRIOCgZub21icmUYAiABKAkSDgoGaWRKZWZlGAMgASgFEhIKCm5v",
            "bWJyZUplZmUYBCABKAkSFQoNaWRDZW50cm9Db3N0bxgFIAEoBRITCgtjZW50",
            "cm9Db3N0bxgGIAEoCRIVCg1pZFN1YnJyb2dhbnRlGAcgASgFEh0KFW5vbWJy",
            "ZUplZmVTdWJycm9nYW50ZRgIIAEoCSIUChJHZXRBbGxVc2Vyc1JlcXVlc3Qi",
            "WAoQR2V0QWxsVXNlcnNSZXBseRIhCgd1c3VhcmlvGAEgASgLMhAucGVyc29u",
            "YS5Vc3VhcmlvEiEKBWVycm9yGAIgASgOMhIucGVyc29uYS5FcnJvckNvZGUi",
            "hwEKB1VzdWFyaW8SDQoFaWRQZXIYASABKAUSDwoHbm9tYnJlcxgCIAEoCRIR",
            "CglhcFBhdGVybm8YAyABKAkSEQoJYXBNYXRlcm5vGAQgASgJEgsKA3J1dBgF",
            "IAEoBRIOCgZkaWdWZXIYBiABKAkSGQoRY29ycmVvRWxlY3Ryb25pY28YByAB",
            "KAkiKQoMTG9naW5SZXF1ZXN0EgsKA3J1dBgBIAEoBRIMCgRwYXNzGAIgASgJ",
            "Ii8KCkxvZ2luUmVwbHkSIQoFZXJyb3IYASABKA4yEi5wZXJzb25hLkVycm9y",
            "Q29kZSIdCg5OZXdQYXNzUmVxdWVzdBILCgNydXQYASABKAUiMQoMTmV3UGFz",
            "c1JlcGx5EiEKBWVycm9yGAEgASgOMhIucGVyc29uYS5FcnJvckNvZGUiMgoT",
            "V3JpdGVOZXdQYXNzUmVxdWVzdBIMCgRwYXNzGAEgASgJEg0KBWlkUGVyGAIg",
            "ASgFIjYKEVdyaXRlTmV3UGFzc1JlcGx5EiEKBWVycm9yGAEgASgOMhIucGVy",
            "c29uYS5FcnJvckNvZGUqSAoJRXJyb3JDb2RlEggKBE5vbmUQABIYChRVc3Vh",
            "cmlvTm9SZXNnaXN0cmFkbxBkEhcKElBhc3N3b3JkSW5jb3JyZWN0YRDIATLH",
            "AgoHcGVyc29uYRIzCgVMb2dpbhIVLnBlcnNvbmEuTG9naW5SZXF1ZXN0GhMu",
            "cGVyc29uYS5Mb2dpblJlcGx5EjkKB05ld1Bhc3MSFy5wZXJzb25hLk5ld1Bh",
            "c3NSZXF1ZXN0GhUucGVyc29uYS5OZXdQYXNzUmVwbHkSSAoMV3JpdGVOZXdQ",
            "YXNzEhwucGVyc29uYS5Xcml0ZU5ld1Bhc3NSZXF1ZXN0GhoucGVyc29uYS5X",
            "cml0ZU5ld1Bhc3NSZXBseRJHCgtHZXRBbGxVc2VycxIbLnBlcnNvbmEuR2V0",
            "QWxsVXNlcnNSZXF1ZXN0GhkucGVyc29uYS5HZXRBbGxVc2Vyc1JlcGx5MAES",
            "OQoHR2V0QnlJZBIXLnBlcnNvbmEuR2V0QnlJZFJlcXVlc3QaFS5wZXJzb25h",
            "LkdldEJ5SWRSZXBseUILqgIIUGVyc29uYXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Personas.ErrorCode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Personas.GetByIdRequest), global::Personas.GetByIdRequest.Parser, new[]{ "IdPer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Personas.GetByIdReply), global::Personas.GetByIdReply.Parser, new[]{ "IdPer", "Nombre", "IdJefe", "NombreJefe", "IdCentroCosto", "CentroCosto", "IdSubrrogante", "NombreJefeSubrrogante" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Personas.GetAllUsersRequest), global::Personas.GetAllUsersRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Personas.GetAllUsersReply), global::Personas.GetAllUsersReply.Parser, new[]{ "Usuario", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Personas.Usuario), global::Personas.Usuario.Parser, new[]{ "IdPer", "Nombres", "ApPaterno", "ApMaterno", "Rut", "DigVer", "CorreoElectronico" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Personas.LoginRequest), global::Personas.LoginRequest.Parser, new[]{ "Rut", "Pass" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Personas.LoginReply), global::Personas.LoginReply.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Personas.NewPassRequest), global::Personas.NewPassRequest.Parser, new[]{ "Rut" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Personas.NewPassReply), global::Personas.NewPassReply.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Personas.WriteNewPassRequest), global::Personas.WriteNewPassRequest.Parser, new[]{ "Pass", "IdPer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Personas.WriteNewPassReply), global::Personas.WriteNewPassReply.Parser, new[]{ "Error" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ErrorCode {
    [pbr::OriginalName("None")] None = 0,
    [pbr::OriginalName("UsuarioNoResgistrado")] UsuarioNoResgistrado = 100,
    [pbr::OriginalName("PasswordIncorrecta")] PasswordIncorrecta = 200,
  }

  #endregion

  #region Messages
  public sealed partial class GetByIdRequest : pb::IMessage<GetByIdRequest> {
    private static readonly pb::MessageParser<GetByIdRequest> _parser = new pb::MessageParser<GetByIdRequest>(() => new GetByIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetByIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Personas.PersonasReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByIdRequest(GetByIdRequest other) : this() {
      idPer_ = other.idPer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByIdRequest Clone() {
      return new GetByIdRequest(this);
    }

    /// <summary>Field number for the "idPer" field.</summary>
    public const int IdPerFieldNumber = 1;
    private int idPer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdPer {
      get { return idPer_; }
      set {
        idPer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetByIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetByIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdPer != other.IdPer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdPer != 0) hash ^= IdPer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IdPer != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IdPer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdPer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdPer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetByIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.IdPer != 0) {
        IdPer = other.IdPer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IdPer = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetByIdReply : pb::IMessage<GetByIdReply> {
    private static readonly pb::MessageParser<GetByIdReply> _parser = new pb::MessageParser<GetByIdReply>(() => new GetByIdReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetByIdReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Personas.PersonasReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByIdReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByIdReply(GetByIdReply other) : this() {
      idPer_ = other.idPer_;
      nombre_ = other.nombre_;
      idJefe_ = other.idJefe_;
      nombreJefe_ = other.nombreJefe_;
      idCentroCosto_ = other.idCentroCosto_;
      centroCosto_ = other.centroCosto_;
      idSubrrogante_ = other.idSubrrogante_;
      nombreJefeSubrrogante_ = other.nombreJefeSubrrogante_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByIdReply Clone() {
      return new GetByIdReply(this);
    }

    /// <summary>Field number for the "idPer" field.</summary>
    public const int IdPerFieldNumber = 1;
    private int idPer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdPer {
      get { return idPer_; }
      set {
        idPer_ = value;
      }
    }

    /// <summary>Field number for the "nombre" field.</summary>
    public const int NombreFieldNumber = 2;
    private string nombre_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nombre {
      get { return nombre_; }
      set {
        nombre_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idJefe" field.</summary>
    public const int IdJefeFieldNumber = 3;
    private int idJefe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdJefe {
      get { return idJefe_; }
      set {
        idJefe_ = value;
      }
    }

    /// <summary>Field number for the "nombreJefe" field.</summary>
    public const int NombreJefeFieldNumber = 4;
    private string nombreJefe_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NombreJefe {
      get { return nombreJefe_; }
      set {
        nombreJefe_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idCentroCosto" field.</summary>
    public const int IdCentroCostoFieldNumber = 5;
    private int idCentroCosto_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdCentroCosto {
      get { return idCentroCosto_; }
      set {
        idCentroCosto_ = value;
      }
    }

    /// <summary>Field number for the "centroCosto" field.</summary>
    public const int CentroCostoFieldNumber = 6;
    private string centroCosto_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CentroCosto {
      get { return centroCosto_; }
      set {
        centroCosto_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idSubrrogante" field.</summary>
    public const int IdSubrroganteFieldNumber = 7;
    private int idSubrrogante_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdSubrrogante {
      get { return idSubrrogante_; }
      set {
        idSubrrogante_ = value;
      }
    }

    /// <summary>Field number for the "nombreJefeSubrrogante" field.</summary>
    public const int NombreJefeSubrroganteFieldNumber = 8;
    private string nombreJefeSubrrogante_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NombreJefeSubrrogante {
      get { return nombreJefeSubrrogante_; }
      set {
        nombreJefeSubrrogante_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetByIdReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetByIdReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdPer != other.IdPer) return false;
      if (Nombre != other.Nombre) return false;
      if (IdJefe != other.IdJefe) return false;
      if (NombreJefe != other.NombreJefe) return false;
      if (IdCentroCosto != other.IdCentroCosto) return false;
      if (CentroCosto != other.CentroCosto) return false;
      if (IdSubrrogante != other.IdSubrrogante) return false;
      if (NombreJefeSubrrogante != other.NombreJefeSubrrogante) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdPer != 0) hash ^= IdPer.GetHashCode();
      if (Nombre.Length != 0) hash ^= Nombre.GetHashCode();
      if (IdJefe != 0) hash ^= IdJefe.GetHashCode();
      if (NombreJefe.Length != 0) hash ^= NombreJefe.GetHashCode();
      if (IdCentroCosto != 0) hash ^= IdCentroCosto.GetHashCode();
      if (CentroCosto.Length != 0) hash ^= CentroCosto.GetHashCode();
      if (IdSubrrogante != 0) hash ^= IdSubrrogante.GetHashCode();
      if (NombreJefeSubrrogante.Length != 0) hash ^= NombreJefeSubrrogante.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IdPer != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IdPer);
      }
      if (Nombre.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nombre);
      }
      if (IdJefe != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(IdJefe);
      }
      if (NombreJefe.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NombreJefe);
      }
      if (IdCentroCosto != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(IdCentroCosto);
      }
      if (CentroCosto.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CentroCosto);
      }
      if (IdSubrrogante != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(IdSubrrogante);
      }
      if (NombreJefeSubrrogante.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(NombreJefeSubrrogante);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdPer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdPer);
      }
      if (Nombre.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nombre);
      }
      if (IdJefe != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdJefe);
      }
      if (NombreJefe.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NombreJefe);
      }
      if (IdCentroCosto != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdCentroCosto);
      }
      if (CentroCosto.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CentroCosto);
      }
      if (IdSubrrogante != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdSubrrogante);
      }
      if (NombreJefeSubrrogante.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NombreJefeSubrrogante);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetByIdReply other) {
      if (other == null) {
        return;
      }
      if (other.IdPer != 0) {
        IdPer = other.IdPer;
      }
      if (other.Nombre.Length != 0) {
        Nombre = other.Nombre;
      }
      if (other.IdJefe != 0) {
        IdJefe = other.IdJefe;
      }
      if (other.NombreJefe.Length != 0) {
        NombreJefe = other.NombreJefe;
      }
      if (other.IdCentroCosto != 0) {
        IdCentroCosto = other.IdCentroCosto;
      }
      if (other.CentroCosto.Length != 0) {
        CentroCosto = other.CentroCosto;
      }
      if (other.IdSubrrogante != 0) {
        IdSubrrogante = other.IdSubrrogante;
      }
      if (other.NombreJefeSubrrogante.Length != 0) {
        NombreJefeSubrrogante = other.NombreJefeSubrrogante;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IdPer = input.ReadInt32();
            break;
          }
          case 18: {
            Nombre = input.ReadString();
            break;
          }
          case 24: {
            IdJefe = input.ReadInt32();
            break;
          }
          case 34: {
            NombreJefe = input.ReadString();
            break;
          }
          case 40: {
            IdCentroCosto = input.ReadInt32();
            break;
          }
          case 50: {
            CentroCosto = input.ReadString();
            break;
          }
          case 56: {
            IdSubrrogante = input.ReadInt32();
            break;
          }
          case 66: {
            NombreJefeSubrrogante = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAllUsersRequest : pb::IMessage<GetAllUsersRequest> {
    private static readonly pb::MessageParser<GetAllUsersRequest> _parser = new pb::MessageParser<GetAllUsersRequest>(() => new GetAllUsersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllUsersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Personas.PersonasReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllUsersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllUsersRequest(GetAllUsersRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllUsersRequest Clone() {
      return new GetAllUsersRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllUsersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllUsersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllUsersRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetAllUsersReply : pb::IMessage<GetAllUsersReply> {
    private static readonly pb::MessageParser<GetAllUsersReply> _parser = new pb::MessageParser<GetAllUsersReply>(() => new GetAllUsersReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllUsersReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Personas.PersonasReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllUsersReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllUsersReply(GetAllUsersReply other) : this() {
      usuario_ = other.usuario_ != null ? other.usuario_.Clone() : null;
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllUsersReply Clone() {
      return new GetAllUsersReply(this);
    }

    /// <summary>Field number for the "usuario" field.</summary>
    public const int UsuarioFieldNumber = 1;
    private global::Personas.Usuario usuario_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Personas.Usuario Usuario {
      get { return usuario_; }
      set {
        usuario_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private global::Personas.ErrorCode error_ = global::Personas.ErrorCode.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Personas.ErrorCode Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllUsersReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllUsersReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Usuario, other.Usuario)) return false;
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (usuario_ != null) hash ^= Usuario.GetHashCode();
      if (Error != global::Personas.ErrorCode.None) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (usuario_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Usuario);
      }
      if (Error != global::Personas.ErrorCode.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (usuario_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Usuario);
      }
      if (Error != global::Personas.ErrorCode.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllUsersReply other) {
      if (other == null) {
        return;
      }
      if (other.usuario_ != null) {
        if (usuario_ == null) {
          Usuario = new global::Personas.Usuario();
        }
        Usuario.MergeFrom(other.Usuario);
      }
      if (other.Error != global::Personas.ErrorCode.None) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (usuario_ == null) {
              Usuario = new global::Personas.Usuario();
            }
            input.ReadMessage(Usuario);
            break;
          }
          case 16: {
            Error = (global::Personas.ErrorCode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Usuario : pb::IMessage<Usuario> {
    private static readonly pb::MessageParser<Usuario> _parser = new pb::MessageParser<Usuario>(() => new Usuario());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Usuario> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Personas.PersonasReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Usuario() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Usuario(Usuario other) : this() {
      idPer_ = other.idPer_;
      nombres_ = other.nombres_;
      apPaterno_ = other.apPaterno_;
      apMaterno_ = other.apMaterno_;
      rut_ = other.rut_;
      digVer_ = other.digVer_;
      correoElectronico_ = other.correoElectronico_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Usuario Clone() {
      return new Usuario(this);
    }

    /// <summary>Field number for the "idPer" field.</summary>
    public const int IdPerFieldNumber = 1;
    private int idPer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdPer {
      get { return idPer_; }
      set {
        idPer_ = value;
      }
    }

    /// <summary>Field number for the "nombres" field.</summary>
    public const int NombresFieldNumber = 2;
    private string nombres_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nombres {
      get { return nombres_; }
      set {
        nombres_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "apPaterno" field.</summary>
    public const int ApPaternoFieldNumber = 3;
    private string apPaterno_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApPaterno {
      get { return apPaterno_; }
      set {
        apPaterno_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "apMaterno" field.</summary>
    public const int ApMaternoFieldNumber = 4;
    private string apMaterno_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApMaterno {
      get { return apMaterno_; }
      set {
        apMaterno_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rut" field.</summary>
    public const int RutFieldNumber = 5;
    private int rut_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rut {
      get { return rut_; }
      set {
        rut_ = value;
      }
    }

    /// <summary>Field number for the "digVer" field.</summary>
    public const int DigVerFieldNumber = 6;
    private string digVer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DigVer {
      get { return digVer_; }
      set {
        digVer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "correoElectronico" field.</summary>
    public const int CorreoElectronicoFieldNumber = 7;
    private string correoElectronico_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CorreoElectronico {
      get { return correoElectronico_; }
      set {
        correoElectronico_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Usuario);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Usuario other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdPer != other.IdPer) return false;
      if (Nombres != other.Nombres) return false;
      if (ApPaterno != other.ApPaterno) return false;
      if (ApMaterno != other.ApMaterno) return false;
      if (Rut != other.Rut) return false;
      if (DigVer != other.DigVer) return false;
      if (CorreoElectronico != other.CorreoElectronico) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdPer != 0) hash ^= IdPer.GetHashCode();
      if (Nombres.Length != 0) hash ^= Nombres.GetHashCode();
      if (ApPaterno.Length != 0) hash ^= ApPaterno.GetHashCode();
      if (ApMaterno.Length != 0) hash ^= ApMaterno.GetHashCode();
      if (Rut != 0) hash ^= Rut.GetHashCode();
      if (DigVer.Length != 0) hash ^= DigVer.GetHashCode();
      if (CorreoElectronico.Length != 0) hash ^= CorreoElectronico.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IdPer != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IdPer);
      }
      if (Nombres.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nombres);
      }
      if (ApPaterno.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ApPaterno);
      }
      if (ApMaterno.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ApMaterno);
      }
      if (Rut != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Rut);
      }
      if (DigVer.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DigVer);
      }
      if (CorreoElectronico.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CorreoElectronico);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdPer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdPer);
      }
      if (Nombres.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nombres);
      }
      if (ApPaterno.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApPaterno);
      }
      if (ApMaterno.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApMaterno);
      }
      if (Rut != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rut);
      }
      if (DigVer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DigVer);
      }
      if (CorreoElectronico.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CorreoElectronico);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Usuario other) {
      if (other == null) {
        return;
      }
      if (other.IdPer != 0) {
        IdPer = other.IdPer;
      }
      if (other.Nombres.Length != 0) {
        Nombres = other.Nombres;
      }
      if (other.ApPaterno.Length != 0) {
        ApPaterno = other.ApPaterno;
      }
      if (other.ApMaterno.Length != 0) {
        ApMaterno = other.ApMaterno;
      }
      if (other.Rut != 0) {
        Rut = other.Rut;
      }
      if (other.DigVer.Length != 0) {
        DigVer = other.DigVer;
      }
      if (other.CorreoElectronico.Length != 0) {
        CorreoElectronico = other.CorreoElectronico;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IdPer = input.ReadInt32();
            break;
          }
          case 18: {
            Nombres = input.ReadString();
            break;
          }
          case 26: {
            ApPaterno = input.ReadString();
            break;
          }
          case 34: {
            ApMaterno = input.ReadString();
            break;
          }
          case 40: {
            Rut = input.ReadInt32();
            break;
          }
          case 50: {
            DigVer = input.ReadString();
            break;
          }
          case 58: {
            CorreoElectronico = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Personas.PersonasReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      rut_ = other.rut_;
      pass_ = other.pass_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "rut" field.</summary>
    public const int RutFieldNumber = 1;
    private int rut_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rut {
      get { return rut_; }
      set {
        rut_ = value;
      }
    }

    /// <summary>Field number for the "pass" field.</summary>
    public const int PassFieldNumber = 2;
    private string pass_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pass {
      get { return pass_; }
      set {
        pass_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rut != other.Rut) return false;
      if (Pass != other.Pass) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rut != 0) hash ^= Rut.GetHashCode();
      if (Pass.Length != 0) hash ^= Pass.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Rut != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Rut);
      }
      if (Pass.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Pass);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rut != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rut);
      }
      if (Pass.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pass);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Rut != 0) {
        Rut = other.Rut;
      }
      if (other.Pass.Length != 0) {
        Pass = other.Pass;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rut = input.ReadInt32();
            break;
          }
          case 18: {
            Pass = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginReply : pb::IMessage<LoginReply> {
    private static readonly pb::MessageParser<LoginReply> _parser = new pb::MessageParser<LoginReply>(() => new LoginReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Personas.PersonasReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply(LoginReply other) : this() {
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply Clone() {
      return new LoginReply(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Personas.ErrorCode error_ = global::Personas.ErrorCode.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Personas.ErrorCode Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error != global::Personas.ErrorCode.None) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error != global::Personas.ErrorCode.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error != global::Personas.ErrorCode.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginReply other) {
      if (other == null) {
        return;
      }
      if (other.Error != global::Personas.ErrorCode.None) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Error = (global::Personas.ErrorCode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewPassRequest : pb::IMessage<NewPassRequest> {
    private static readonly pb::MessageParser<NewPassRequest> _parser = new pb::MessageParser<NewPassRequest>(() => new NewPassRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewPassRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Personas.PersonasReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewPassRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewPassRequest(NewPassRequest other) : this() {
      rut_ = other.rut_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewPassRequest Clone() {
      return new NewPassRequest(this);
    }

    /// <summary>Field number for the "rut" field.</summary>
    public const int RutFieldNumber = 1;
    private int rut_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rut {
      get { return rut_; }
      set {
        rut_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewPassRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewPassRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rut != other.Rut) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rut != 0) hash ^= Rut.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Rut != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Rut);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rut != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rut);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewPassRequest other) {
      if (other == null) {
        return;
      }
      if (other.Rut != 0) {
        Rut = other.Rut;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rut = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewPassReply : pb::IMessage<NewPassReply> {
    private static readonly pb::MessageParser<NewPassReply> _parser = new pb::MessageParser<NewPassReply>(() => new NewPassReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewPassReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Personas.PersonasReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewPassReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewPassReply(NewPassReply other) : this() {
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewPassReply Clone() {
      return new NewPassReply(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Personas.ErrorCode error_ = global::Personas.ErrorCode.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Personas.ErrorCode Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewPassReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewPassReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error != global::Personas.ErrorCode.None) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error != global::Personas.ErrorCode.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error != global::Personas.ErrorCode.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewPassReply other) {
      if (other == null) {
        return;
      }
      if (other.Error != global::Personas.ErrorCode.None) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Error = (global::Personas.ErrorCode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WriteNewPassRequest : pb::IMessage<WriteNewPassRequest> {
    private static readonly pb::MessageParser<WriteNewPassRequest> _parser = new pb::MessageParser<WriteNewPassRequest>(() => new WriteNewPassRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WriteNewPassRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Personas.PersonasReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WriteNewPassRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WriteNewPassRequest(WriteNewPassRequest other) : this() {
      pass_ = other.pass_;
      idPer_ = other.idPer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WriteNewPassRequest Clone() {
      return new WriteNewPassRequest(this);
    }

    /// <summary>Field number for the "pass" field.</summary>
    public const int PassFieldNumber = 1;
    private string pass_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pass {
      get { return pass_; }
      set {
        pass_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idPer" field.</summary>
    public const int IdPerFieldNumber = 2;
    private int idPer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdPer {
      get { return idPer_; }
      set {
        idPer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WriteNewPassRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WriteNewPassRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pass != other.Pass) return false;
      if (IdPer != other.IdPer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pass.Length != 0) hash ^= Pass.GetHashCode();
      if (IdPer != 0) hash ^= IdPer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pass.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pass);
      }
      if (IdPer != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IdPer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pass.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pass);
      }
      if (IdPer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdPer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WriteNewPassRequest other) {
      if (other == null) {
        return;
      }
      if (other.Pass.Length != 0) {
        Pass = other.Pass;
      }
      if (other.IdPer != 0) {
        IdPer = other.IdPer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pass = input.ReadString();
            break;
          }
          case 16: {
            IdPer = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WriteNewPassReply : pb::IMessage<WriteNewPassReply> {
    private static readonly pb::MessageParser<WriteNewPassReply> _parser = new pb::MessageParser<WriteNewPassReply>(() => new WriteNewPassReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WriteNewPassReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Personas.PersonasReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WriteNewPassReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WriteNewPassReply(WriteNewPassReply other) : this() {
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WriteNewPassReply Clone() {
      return new WriteNewPassReply(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Personas.ErrorCode error_ = global::Personas.ErrorCode.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Personas.ErrorCode Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WriteNewPassReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WriteNewPassReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error != global::Personas.ErrorCode.None) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error != global::Personas.ErrorCode.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error != global::Personas.ErrorCode.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WriteNewPassReply other) {
      if (other == null) {
        return;
      }
      if (other.Error != global::Personas.ErrorCode.None) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Error = (global::Personas.ErrorCode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
